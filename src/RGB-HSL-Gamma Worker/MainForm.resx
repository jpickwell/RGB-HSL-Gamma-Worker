<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAEBAAAAEACABoBQAANgAAABgYAAABAAgAyAYAAJ4FAAAgIAAAAQAIAKgIAABmDAAAKAAAABAA
        AAAgAAAAAQAIAAAAAAAAAQAAAAAAAAAAAAAAAQAAAAEAAAAAAAAKEBAAChofAAAgLwAXJC4AACU/AAAr
        PwAXIz0AFy49ABc6TQAePVoAD0FNAB5MSwAAQV8AD0tcABdEXAA7YUkAAFd/ACVNZAAwU2QAMFx0ABZh
        fwBDQEoAfVZWAElSeABWVn0An29vAK97ewBvn28Ae697AABhjwAAbJ8AIXufAAB3rwAAfL8AAHP/AAB5
        /wAAf/8AAIK/AACNzwAAmN8AIaffAC2s3wAAhu8AAJ3vAACL/wAAkP8AAJb/ADie/wAAo+8AAKL/AACo
        /wAArv8AOLDvADiq/wAht/8AIb3/AE+17wBDr/8AQ7X/AFq//wAtwv8AOMH/AEPA/wBDzP8AT8v/AFrW
        /wBx4P8A46WlAP++vgCRy5EAru2uAL7/vgCRkcsAm5vXAKWl4wCuru0Avr7/AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADEQAAAAAAAAAAAAAAAAAABjQnCklN
        SEhISEVFRUVFAAI1NDQeGEhISEhFRUVFRQAAEzAvNCgLHUhIRUVFRUUAAEsUNiU0NCEQR0VFRUVFAABN
        SxQ+JC80MQ4aRUVFRQAATUwKIEItJDI0JhZERUUAAE1KJjRAQzIkLTQxCEVFAABNSiIvLztDNC8lMgZF
        RQAATUsSKj1CQjg0NCsHRUUAAE1NTRkRMTQ0NzQNG0VFAABNTU1NSxAfNEE/NAlERQAATU1NTU1IRgwm
        QDosCEQAAE1NTU1NSEhIHA8pPCwEAABNTU1NTUhISEhFFxU5BQAAAAAAAAAAAAAAAAAAAQEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgA
        AAAYAAAAMAAAAAEACAAAAAAAQAIAAAAAAAAAAAAAAAEAAAABAAAAAAAAFxkeAB4uHgAAGSYAFRgkAAcg
        LgASJisAHjcsAAAiMwAAJjwAASk8ABItOQAPMDQAETk+ABU6PAA/KioAICAwACsoMwBLMzMATDU2AEk4
        OwBSOzsAK0ArAC9GLwAgQTsAAC1BAAAvRAAaOUsAADhSAAA+WgAqL0EANjZQADY+VwA4OFIAOjpWADo/
        XQAZSk8AE0tWAB9NWwA8QVwAAEVkAABIagAASm0AAExvAA5JaQAGUW8AE1RuAANLcAAATXEAAFJ5AABW
        fgBaQEAAX0NDAGZGRgB9VlYAQWBBAElrSQBLbUsAU3pTAEJCYgBBRGIARkZmAIJaWgCSZWUAsX19AGCL
        YAB9sX0AAFiCAABahQAPYYUACmSMAABhkQApaIIAK2iJAC1ykQAufpgAAFSgAABvogAAcqoAAHSrAAB2
        rQAAerMAAHu7AGJijQBubp4AcnKkAAB6/wAAfP8AU5CYAESXsgBkrroAAIPAAACKzAAAjM0ADJDMAByS
        wQAZmM4AAJDSAACS1gAAk94AAJTcABmf1AAAmeEAAIH/AACF/wAAiv8AAI7/AACR/wAAlP8AAJj/AACg
        6wAAoe0AAKTwAACm9QAApf8ADKL/AACp+AAArPsAAKn/AACt/gAHrf8AD6j/AA6s/wASo/8AEan+ABWr
        /wAAsf8AALX/AAC4/wAAvP8AErb/ABe7/wAWvP8AHb3/ADi/7QAxp/8AL7vzAC6y/wAsuf8ANLj/ADO8
        /wA+vv8AWbbvAEyu/wBQrf8ATb7/AGK59QAcw/8AJcH/ADXA/wA0xf8ANcj/AD7L/wA7zf8ATMr/AFDP
        /wBF0f8AStH/AFPU/wBV1v8AbtP/AGbc/wB+3P8AgriCAIa9hgCIv4gAgoK4ANOYmADWmpoA2Z2dAN6h
        oQDmp6cA6aqqAO6vrwDxsrIA/76+AJLNkgCj4aMAru2uALLxsgC29rYAvv++AI6OxwCnp+YAqannAKur
        6gCuru0AtLTzALW19QC+vv8Aguj/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArKwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAFQydFEFPbu1tbW1tbW1ta+vr6+vr68AAFRDd3dvLxCltbW1tbW1ta+vr6+vr68AAFUmjHd+
        cFsMOrO1tbW1ta+vr6+vr68AALs9SIdrfn5mLQKktbW1ta+vr6+vr68AAL26J0mJV3d+b1sOOLK1ta+v
        r6+vr68AAL29uiBKildtgH5iMhakta+vr6+vr68AAL29vbcgS5poV3eAb1AkOKyvr6+vr68AAL29vb24
        HlibaVdrgH5iMhJAr6+vr68AAL29vb2mBAZanWloaHeAcFAbNqqvr68AAL29vb0fQ1BgoZxtaFdrgIBi
        KxSur68AAL29vb0iXH5+g6GZcmloaXKAdwipr68AAL29vb0iXoN9eYyimX5yaWtrfhqor68AAL29vb09
        RYiVjImgvoV+fm1rcgmor68AAL29vb22Iy5fhZOVl4V3d35cTBGsr68AAL29vb29ulMYR2R+d3eCd35N
        AD6vr68AAL29vb29vb2wOCVQb36UjX1+KzSrr68AAL29vb29vb21tUIXLVx0m5F9figSrK8AAL29vb29
        vb21tbWzQQdHZpuPfXcdFawAAL29vb29vb21tbW1tbE3DlKGkHt3HDQAAL29vb29vb21tbW1tbW1pA8s
        ZZJzdwMAAL29vb29vb21tbW1tbW1ta8/AUaOfRkAAL29vb29vb21tbW1tbW1ta+vqjULWQoAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAACAA
        AABAAAAAAQAIAAAAAAAABAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAgAAAUPAAAKDwAZAwMACBAIAAEB
        EAAICBAAABUfACMHBwA3EREAMRsbABEgEQARNxEAGzEbABERIAARETcAGxsxAAAgLwAAKz8ACzA/AEse
        HgAmQiYAMlQyAD9lPwAANk8AADtfACYmQgAvL2EAAEFfACFFTwAATG8AFlZvAABRfwAAV38AdkJCAHVL
        SwBCdkIAnm5uAFqHWgBol2gAbp5uAHaodgAAYY8AAGyfACF7nwAAd68ATU2AAFhYiwBPfp8Abm6eAHZ2
        qAAAYv8AAGj/AABu/wAAc/8AAHn/AAB//wAAgr8AZZSfAGWanwBxn58AAI3PAACY3wAAhf8AAIv/AACQ
        /wAAlv8AC5b/AACc/wAhg/8AIY7/ACGa/wA4nv8AAKPvAACi/wALp/8AAKj/AACu/wALrf8AC7P/ABa4
        /wAhoP8AIbH/ACG9/wBDo/8AT7r/AEPB7wBay+8AQ8z/AE/L/wBP0f8AWtb/AHHV7wBl1f8AZdv/AHHV
        /wBx2v8AfNr/AHHg/wCziIgAu5KSAIu+iwCSu5IAhYW5AJKSuwDCkZEAyJSUAM2bmwDFoKAA1qOjANqq
        qgDUt7cAlMiUAKPWowCq2qoAsuWyAJGRwgCjo9YAqqraALe31ACH3/8Ah+r/AP/OzgDA8sAAzv/OAMDA
        8gDOzv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnZwAAAAAA
        AAAAAAAAAAAAAAAAABwcAAAAAAAAAAAAZykpZwAAAAAAAAAAAAAAAAAAAAAAEh8GMgAAAAAAAGcpc3Mp
        ZwAAAAAAAAAAAAAAAAAAAAATTjoIEAAAAABnKXN9fXMpZwAAAAAAAAAAAAAAAAAAABNOTk4iADAAZylz
        fX19fXMpZwAAAAAAAAAAAAAAAAAAE09OTk4+EwYlc319fX19fXMpZwAAAAAAAAAAAAAAAAAGMVJOTk5O
        KwMXfH19fX19fXMpZQAAAAAAAAAAAAAAAAAGO0dFTk5OPxkFKn19fX19fXMmZQAAAAAAAAAAAAAAAAAG
        PEhATk5OTi4DFnR9fX19fW8mZQAAAAAAAAAAAAAAAAABPFM2Q05OTkodBSh9fX19e28mZQAAAAAAAAAA
        AAAAaS8HPFRAOE5OTk46CA5yfX17e28mZQAAAAAAAAAAAGkyd3YAPFRFNUJOTk5KIgAnfHt7e28mZQAA
        AAAAAABpMnd/aBEAPVlOODZOTk5OPhIMa3t7e28mZQAAAAAAaTJ3f38HHSIiXVlORTVATk5OTisDJHt7
        e28mZQAAAGkyd39/fwA6Tk5OY1lOSzg2S05OTj8Ia3t7e28mZQB4MnV/f39/ADpOTk5OY1lOTks2QE5O
        ThNre3t7e2omcABpMnd/f38AOk5FQ0NDYFlOTk5FOEVOE2t7e3tvJmUAAABpMnd/fwcgWFxcX3p6eltO
        Tk5OQkITa3t7byZlAAAAAABpMnd/dhsILE5OTk5OTk5OTk46GgFue28mZQAAAAAAAABpMnd/fzMPEzpO
        Tk5OUE5OThkAa3tvJmUAAAAAAAAAAABpMnd/f34nBR0/Tk5QXkxOShILbCZlAAAAAAAAAAAAAABpMnd/
        f310GAMiSk5UeUROShIEZAAAAAAAAAAAAAAAAABpMnd/fX19cRYILE5RYkhOShIKAAAAAAAAAAAAAAAA
        AABpMnd9fX19fSoMEzpQYUZOShIKAAAAAAAAAAAAAAAAAABpMnN9fX19fXwnBR0/WlVLShIjAAAAAAAA
        AAAAAAAAAABpKXN9fX19fX1mDQMiV0lOIhUAAAAAAAAAAAAAAAAAAABnKXN9fX19cylnABUILVYhFQAA
        AAAAAAAAAAAAAAAAAABnKXN9fXMpZwAAAG0JFB4VAAAAAAAAAAAAAAAAAAAAAABnKXNzKWcAAAAAAAAm
        FW0AAAAAAAAAAAAAAAAAAAAAAABnKSlnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnZwAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//5//+f8P//h+B//4PAP/+Ag
        B//gAAP/4AAB//AAAP/4AAB//AAAP/gAAB/wAAAP4AAAB8AAAAOAAAABAAAAAIAAAAHAAAAD4AAAB/AA
        AA/4AAAf/AAAP/4AAD//AAAf/4AAD//AAA//4AQP//AOD//4H4///D////5///////8=
</value>
  </data>
</root>